name: Food App Workflow

on:
  push:
    branches: [develop, master]
  pull_request:
    types: [opened, synchronize]

jobs:

  client_storage:
    continue-on-error: true
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Build App
        run: ./gradlew :clientstorage:build

      - name: Artifactory Publish to Github Packages
        run: ./gradlew :clientstorage:publish

  device_api:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Build App
        run: ./gradlew :device-api:build

      - name: Artifactory Publish to Github Packages
        run: ./gradlew :device-api:publish

  pax_manager:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [device_api]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Build App
        run: ./gradlew :device:pax-manager:build

      - name: Artifactory Publish to Github Packages
        run: ./gradlew :device:pax-manager:publish

  verifone_manager:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [device_api]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Build App
        run: ./gradlew :device:verifone-manager:build

      - name: Artifactory Publish to Github Packages
        run: ./gradlew :device:verifone-manager:publish

  device_manager:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Build App
        run: ./gradlew :device-manager:build

      - name: Artifactory Publish to Github Packages
        run: ./gradlew :device-manager:publish

  update_dependencies:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage, device_manager, device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Download Dependencies
        run: ./gradlew androidDependencies

  android_debug:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage, device_manager, device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-

      - name: Lint Debug
        run: ./gradlew lint

      - uses: actions/upload-artifact@v2
        with:
          name: android-lint-report
          path: ~/app/build/reports/lint-results.html

      - uses: actions/upload-artifact@v2
        with:
          name: android-lint-report
          path: ./**/build/reports/lint-results.xml

  detekt:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage, device_manager, device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: detekt
        run: ./gradlew detekt

      - uses: actions/upload-artifact@v2
        with:
          name: detekt-report
          path: ./**/build/reports/detekt/detekt.*

  unit_test:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage, device_manager, device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-
      - name: Unit Test
        run: ./gradlew test

      - uses: actions/upload-artifact@v2
        with:
          name: unit-test-report
          path: ./**/build/reports/tests/

  jacoco:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage, device_manager, device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Jacoco Coverage Verification
        run: ./gradlew testDebugUnitTestJacocoCoverageVerification

      - name: Jacoco Coverage Report + Coveralls
        run: ./gradlew testDebugUnitTestJacocoReport coverallsJacoco

      - uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: ./**/build/reports/jacoco/

  update_documentation:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: [client_storage, device_manager, device_api, pax_manager, verifone_manager]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAVEN_URL: ${{ secrets.MAVEN_URL }}
      apiBaseUrl: ${{ secrets.API_BASE_URL }}
      GITHUB_USER: ${{ secrets.GHP_USER }}
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GHP_ACCESS_TOKEN }}
      ci: true
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Setup Git Environment
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir documentation
          git config --global user.email "anibal.bastias@gmail.com"
          git config --global user.name "[CI] Anibal Bastias Soto"
          git fetch
          git checkout github-pages-documentation

      - name: Generate Gradle checksums
        run: |
          find buildSrc -name "*.kt" -type f | sort | xargs shasum  > gradle-checksums.txt
          cat gradle-checksums.txt
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: gradle-${{ hashFiles('gradle-checksums.txt') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ hashFiles('gradle-checksums.txt') }}-

      - name: Update Client Storage Documentation
        run: ./gradlew clientstorage:dokkaHtml

      - name: Update Device Api Documentation
        run: ./gradlew device-api:dokkaHtml

      - name: Update Pax Manager Documentation
        run: ./gradlew device:pax-manager:dokkaHtml

      - name: Update Verifone Manager Documentation
        run: ./gradlew device:verifone-manager:dokkaHtml

      - name: Update Device Manager Documentation
        run: ./gradlew device-manager:dokkaHtml

      - name: Push changes to remote
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          git add .
          git commit -m "Update documentation from GithubActions CI"
          git push -u origin github-pages-documentation -f

